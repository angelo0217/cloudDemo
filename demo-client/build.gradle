buildscript {
    repositories {
        mavenCentral()
        maven { url 'https://repo.spring.io/milestone' }
    }
    dependencies {
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:3.0.0-M1'
    }
}

plugins {
//	id 'org.springframework.boot' version '3.0.0-M1'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

ext {
    set('springCloudVersion', "2022.0.0-M1")
}

compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"
javadoc.options.encoding = 'UTF-8'

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

tasks.withType(Javadoc) {
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {
    systemProperty "file.encoding", "UTF-8"
}

apply plugin: 'org.springframework.boot'
group 'com.demo.client'
version '1.0.0'
sourceCompatibility = '17'

repositories {
    mavenLocal()
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
    maven {
        url "https://plugins.gradle.org/m2/"
    }
}

dependencies {
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('org.springframework.boot:spring-boot-starter-actuator')
    implementation('org.springframework.boot:spring-boot-starter-webflux')
    implementation('org.springframework.boot:spring-boot-starter-aop')
    implementation('org.springframework.boot:spring-boot-starter-websocket')
    implementation("org.springframework.boot:spring-boot-starter-cache")
    implementation('org.springframework.boot:spring-boot-starter-test')
    implementation('org.apache.httpcomponents:httpclient:4.5.13')
//    implementation('org.jolokia:jolokia-core:1.7.1')

    //logback to kafka
//    implementation('org.apache.kafka:kafka-clients')
//    implementation('com.github.danielwegener:logback-kafka-appender:0.2.0-RC1')

    //Redis
    implementation("org.springframework.boot:spring-boot-starter-data-redis")
    implementation("org.apache.commons:commons-pool2")
    implementation("org.springframework.boot:spring-boot-starter-integration")
    implementation("org.springframework.integration:spring-integration-redis")

    //mq
    implementation('org.springframework.boot:spring-boot-starter-amqp')

    implementation('com.google.guava:guava:31.1-jre')
    implementation('org.apache.commons:commons-lang3:3.12.0')

    //swagger
//    implementation('io.springfox:springfox-swagger2:3.0.0')
//    implementation('com.github.xiaoymin:swagger-bootstrap-ui:1.9.6')

    //jsaypt 加密
    implementation('com.github.ulisesbocchio:jasypt-spring-boot-starter:2.1.1')

    //lombok
    implementation('org.projectlombok:lombok:1.18.22')
    annotationProcessor('org.projectlombok:lombok:1.18.22')

    //    Spring cloud
    implementation('org.springframework.cloud:spring-cloud-starter-bootstrap')
    implementation('org.springframework.cloud:spring-cloud-starter-consul-discovery')
    implementation('org.springframework.cloud:spring-cloud-starter-openfeign')
    implementation("org.springframework.cloud:spring-cloud-stream")
    implementation('org.springframework.cloud:spring-cloud-starter-stream-rabbit')
    implementation('org.springframework.retry:spring-retry')


    //swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.0-M1'
    implementation 'org.springframework.boot:spring-boot-configuration-processor'

    // Jwt
    implementation('io.jsonwebtoken:jjwt:0.9.1')
    implementation('org.apache.httpcomponents:httpclient:4.5.3')
    implementation('org.apache.commons:commons-lang3:3.12.0')
    implementation("org.apache.commons:commons-pool2")


    //service
    implementation('com.demo.service:demo-service:1.0.0')

    implementation group: 'io.github.resilience4j', name: 'resilience4j-spring-cloud2', version: '1.7.1'

}


tasks.named('test') {
    useJUnitPlatform()
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}