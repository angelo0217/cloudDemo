buildscript {
    ext {
        springBootVersion = '2.3.2.RELEASE'
        springBootAdminVersion = '2.1.5'
        springCloudVersion = 'Hoxton.SR5'
    }
    repositories {
        mavenCentral()
        mavenLocal()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
    id "org.sonarqube" version "2.7"
}

apply plugin: 'java'
apply plugin: "org.springframework.boot"
apply plugin: 'io.spring.dependency-management'

group 'com.demo.client'
version '1.0.0'


sourceCompatibility = 13

repositories {
    mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
}


compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"
javadoc.options.encoding = 'UTF-8'

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

tasks.withType(Javadoc) {
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {
    systemProperty "file.encoding", "UTF-8"
}


repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('org.springframework.boot:spring-boot-starter-actuator')
    implementation('org.springframework.boot:spring-boot-starter-webflux')
    implementation('org.springframework.boot:spring-boot-starter-aop')
    implementation('org.springframework.boot:spring-boot-starter-websocket')
    implementation("org.springframework.boot:spring-boot-starter-cache")
    implementation('org.springframework.boot:spring-boot-starter-test')
    implementation('org.apache.httpcomponents:httpclient:4.5.3')
    implementation('org.jolokia:jolokia-core')
    implementation('org.springframework.retry:spring-retry')

    //logback to kafka
    implementation('org.apache.kafka:kafka-clients')
    implementation('com.github.danielwegener:logback-kafka-appender:0.2.0-RC1')

    //Redis
    implementation("org.springframework.boot:spring-boot-starter-data-redis")
    implementation("org.apache.commons:commons-pool2")
    implementation("org.springframework.boot:spring-boot-starter-integration")
    implementation("org.springframework.integration:spring-integration-redis")

    //mq
    implementation('org.springframework.boot:spring-boot-starter-amqp')

    implementation('io.swagger:swagger-annotations:1.5.22')
    implementation('io.swagger:swagger-models:1.5.22')
    compile 'cglib:cglib:3.3.0'
    implementation('com.github.ulisesbocchio:jasypt-spring-boot-starter:2.1.1')

    implementation('com.google.guava:guava:23.0')
    implementation('org.apache.commons:commons-lang3:3.9')

    //swagger
    implementation('io.springfox:springfox-swagger2:2.9.2')
    implementation('com.github.xiaoymin:swagger-bootstrap-ui:1.9.0')

    //jsaypt 加密
    implementation('com.github.ulisesbocchio:jasypt-spring-boot-starter:2.1.1')

    //lombok
    implementation('org.projectlombok:lombok:1.18.12')
    annotationProcessor('org.projectlombok:lombok:1.18.12')

    //    Spring cloud
    implementation('org.springframework.cloud:spring-cloud-starter-consul-discovery')
//    implementation('org.springframework.cloud:spring-cloud-starter-config')
    implementation('org.springframework.cloud:spring-cloud-starter-openfeign')
    implementation('org.springframework.cloud:spring-cloud-starter-bus-amqp')

    // Jwt
    implementation('io.jsonwebtoken:jjwt:0.9.1')
    implementation('org.apache.httpcomponents:httpclient:4.5.3')
    implementation('org.apache.commons:commons-lang3:3.9')
    implementation("org.apache.commons:commons-pool2")

    // Prometheus
    compile('io.micrometer:micrometer-core:1.5.1')
    compile('io.micrometer:micrometer-registry-prometheus:1.5.1')

    //service
    compile('com.demo.service:demo-service:1.0.0')

    implementation group: 'io.github.resilience4j', name: 'resilience4j-spring-cloud2', version: '1.4.0'

}


test {
    exclude 'com/**'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}